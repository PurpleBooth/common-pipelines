on:
  push:
    branches:
      - "*"
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      run_on_windows:
        description: 'Enable checks on windows'
        default: true
        required: false
        type: boolean

jobs:
  specdown:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            specdown: https://github.com/specdown/specdown/releases/latest/download/specdown-x86_64-apple-darwin
          - os: ubuntu-latest
            specdown: https://github.com/specdown/specdown/releases/latest/download/specdown-x86_64-unknown-linux-gnu
          - os: windows-latest
            specdown: https://github.com/specdown/specdown/releases/latest/download/specdown-x86_64-pc-windows-msvc.exe
    steps:
      - uses: actions/checkout@v2.3.4
        if: runner.os != 'Windows' || ( runner.os == 'Windows' && inputs.run_on_windows == true )
      - uses: actions/cache@v2.1.6
        if: runner.os != 'Windows' || ( runner.os == 'Windows' && inputs.run_on_windows == true )
        with:
          path: |
            .cache
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: |
          set -euo pipefail
          mkdir -p "$GITHUB_WORKSPACE/target/assorted/bin"
          curl -Lo "$GITHUB_WORKSPACE/target/assorted/bin/specdown" "$SPECDOWN_URL"
          chmod +x "$GITHUB_WORKSPACE/target/assorted/bin/specdown"
          echo "$GITHUB_WORKSPACE/target/assorted/bin" >> "$GITHUB_PATH"
        env:
          SPECDOWN_URL: ${{ matrix.specdown }}
        if: runner.os != 'Windows' || ( runner.os == 'Windows' && inputs.run_on_windows == true )
        shell: bash
        name: Download Specdown
      - uses: actions-rs/toolchain@v1.0.7
        if: runner.os != 'Windows' || ( runner.os == 'Windows' && inputs.run_on_windows == true )
        with:
          profile: minimal
          toolchain: stable
          default: true
      - name: Prevent windows from trying to start WSL
        if: runner.os == 'Windows' && inputs.run_on_windows == true
        run: |
          takeown /F C:\Windows\System32\bash.exe
          icacls C:\Windows\System32\bash.exe /grant administrators:F
          ren C:\Windows\System32\bash.exe wsl-bash.exe
      - run: make specdown
        if: runner.os != 'Windows' || ( runner.os == 'Windows' && inputs.run_on_windows == true )
on:
  push:
    branches:
    - main

jobs:
  release:
    if: github.ref == 'refs/heads/main'
    env:
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_USER: ${{ github.actor }}
    outputs:
      version_bump: ${{ steps.version_bump.outputs.version_bump }}
      current_version: ${{ steps.current_version.outputs.current_version }}
      previous_version: ${{ steps.previous_version.outputs.previous_version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
      name: Checkout the code
      with:
        fetch-depth: 0
    - name: Install versio
      run: |
        sudo apt-get update
        sudo apt-get install -y libgpgme11-dev
        cargo install versio
    - id: previous_version
      name: Get the previous version
      run: echo ::set-output "name=previous_version::$( versio get --id 1 -v )"
    - run: echo ::set-output "name=BUMP::$( versio release --dry-run )"
      name: Dry run a release
      id: get_versio_plan
    - name: Generate release
      if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') }}
      run: |
        versio release
    - run: echo ::set-output "name=current_version::$( versio get --id 1 -v )"
      id: current_version
      name: Get the current version
    - run: echo ::set-output "name=version_bump::true"
      name: Set the version changed flag
      if: steps.current_version.outputs.current_version != steps.previous_version.outputs.previous_version
      id: version_bump

  github-release:
    if: needs.release.outputs.version_bump
    runs-on: ubuntu-latest
    needs:
    - release
    steps:
    - uses: actions/checkout@v3.1.0
      name: Checkout the repository
      with:
        ref: v${{  needs.release.outputs.current_version }}
        fetch-depth: 0
    - uses: PurpleBooth/changelog-action@v0.3.3
      name: Generate the changelog
      with:
        args: -v v${{ needs.release.outputs.previous_version }}..v${{ needs.release.outputs.current_version
          }}
    - env:
        GITHUB_TOKEN: ${{ github.token }}
      name: Generate the github release
      id: create_release
      uses: ncipollo/release-action@v1.11.2
      with:
        allowUpdates: true
        token: ${{ github.token }}
        bodyFile: CHANGELOG.md
        name: Release v${{  needs.release.outputs.current_version  }}
        tag: v${{  needs.release.outputs.current_version  }}

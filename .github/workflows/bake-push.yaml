on:
  workflow_call:
    inputs:
      current_version:
        description: The current version
        type: string
        required: false
        default: ""
    secrets:
      gpg_private_key:
        description: The private key to sign the git repository with
        required: false
      gpg_passphrase:
        description: The passphrase for the gpg key
        required: false
jobs:
  bake-release-build:
    permissions:
      id-token: "write"
      packages: "write"
      contents: read
      attestations: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ inputs.current_version != '' }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          ref: v${{ inputs.current_version }}
          submodules: recursive
      - name: Checkout
        if: ${{ inputs.current_version == '' }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - run: echo "repository=$( echo "ghcr.io/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract versioned metadata (tags, labels) for Docker
        if: inputs.current_version != ''
        id: meta-with-version
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest
            type=semver,pattern={{version}},value=v${{ inputs.current_version }},prefix=v
            type=semver,pattern={{version}},value=v${{ inputs.current_version }}
            type=sha
      - name: Extract metadata (tags, labels) for Docker
        if: inputs.current_version == ''
        id: meta-without-version
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          bake-target: docker
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=edge,branch=main
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
      - name: Bake Docker (with version)
        if: inputs.current_version != ''
        uses: docker/bake-action@76f9fa3a758507623da19f6092dc4089a7e61592 # v6
        with:
          set: |
            docker.cache-from=type=gha
            docker.cache-to=type=gha,mode=max
            docker.args.VER=${{ inputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-with-version.outputs.bake-file-tags }}
            ${{ steps.meta-with-version.outputs.bake-file-annotations }}
            ${{ steps.meta-with-version.outputs.bake-file-labels }}
          targets: docker
      - name: Bake Docker (without version)
        if: inputs.current_version == ''
        uses: docker/bake-action@76f9fa3a758507623da19f6092dc4089a7e61592 # v6
        with:
          set: |
            docker.cache-from=type=gha
            docker.cache-to=type=gha,mode=max
            docker.args.VER=${{ inputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: docker
      - name: Bake Bins (with version)
        if: inputs.current_version != ''
        uses: docker/bake-action@76f9fa3a758507623da19f6092dc4089a7e61592 # v6
        env:
          GPG_PRIVATE_KEY: ${{ secrets.gpg_private_key }}
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
        with:
          set: |
            docker.cache-from=type=gha
            docker.cache-to=type=gha,mode=max
            bins*.args.VER=${{ inputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-with-version.outputs.bake-file-tags }}
            ${{ steps.meta-with-version.outputs.bake-file-annotations }}
            ${{ steps.meta-with-version.outputs.bake-file-labels }}
          targets: bins
      - name: Bake Bins (without version)
        if: inputs.current_version == ''
        uses: docker/bake-action@76f9fa3a758507623da19f6092dc4089a7e61592 # v6
        env:
          GPG_PRIVATE_KEY: ${{ secrets.gpg_private_key }}
          GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
        with:
          set: |
            docker.cache-from=type=gha
            docker.cache-to=type=gha,mode=max
            bins*.args.VER=${{ inputs.current_version }}
          push: true
          files: |
            ./docker-bake.hcl
            ${{ steps.meta-without-version.outputs.bake-file-tags }}
            ${{ steps.meta-without-version.outputs.bake-file-annotations }}
            ${{ steps.meta-without-version.outputs.bake-file-labels }}
          targets: bins
      - shell: bash
        name: "Flatten filenames"
        run: |
              for I in target/bins/*/*/* ; do
                mv -v "$I" "target/bins/$(echo "$I" | cut -d '/' -f 3- | tr "/" "-")"
              done
              find target/bins/ -type d -empty -delete
      - uses: actions/upload-artifact@v4
        name: Upload binaries
        with:
          name: built-bins
          path: target/bins/
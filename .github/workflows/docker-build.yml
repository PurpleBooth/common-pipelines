on:
  push:
    branches:
      - '*'
  pull_request:
  merge_group:
  workflow_dispatch:
  workflow_call:
    inputs:
      platforms:
        type: string
        description: List of target platforms for build
        required: false
        default: linux/amd64,linux/arm64
jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - run: echo "repository=$( echo "ghcr.io/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=raw,value=latest
            type=sha
      - name: Test build
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: .
          push: false
          pull: true
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          outputs: type=oci,dest=/tmp/docker-image-cache.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-cache
          path: /tmp/docker-image-cache.tar

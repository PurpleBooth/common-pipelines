on:
  workflow_call:
    inputs:
      current_version:
        description: The current version
        type: string
        required: true
      platforms:
        type: string
        description: List of target platforms for build
        required: false
        default: linux/amd64,linux/arm64
jobs:
  docker-push:
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          lfs: true
          ref: v${{ inputs.current_version }}
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - run: echo "repository=$( echo "ghcr.io/$REPOSITORY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        id: docker
        name: Turn repository name into docker registry name
        env:
          REPOSITORY: ${{ github.repository }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ steps.docker.outputs.repository }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=v${{ inputs.current_version }}
            type=sha
      - name: Deploy build
        uses: docker/build-push-action@v6.7.0
        id: build-and-push
        with:
          context: .
          push: true
          pull: true
          sbom: true
          provenance: mode=max
          platforms: ${{ inputs.platforms }}
          github-token: ${{ github.token }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=registry,oci-mediatypes=true,compression=estargz,force-compression=true
      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ steps.docker.outputs.repository }}:v${{ inputs.current_version }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
      - name: Attest
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ steps.docker.outputs.repository }}:latest
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true
